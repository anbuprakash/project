webdriver driver =new chromedriver() why???
how to switch direct to 5th frame???
component in automation???


mol :method resolution taken by  compiler
mor: method resolution taken by jvm

jaVA ;SQL EXCEPTION,FILE not found,IO,INTERAPTED EXCEPTION-THREAD.SLEEP

SQL:current date


what is null??

= & ==

continue key word?

break key word??

priority =1,-4,3  :-4,1,3

1 & 10 without loop :Complex way: use recursion

public void recursiveMe(int n) {
    if(n <= 10) {// 10 is the max limit
        System.out.println(n);//print n
        recursiveMe(n+1);//call recursiveMe with n=n+1
    }
}
recursiveMe(1); // call the function with 1.

maven dependency why??

.m2 check pannum  ..


Features Of Selenium 4
The features are as follows:

#1) Capture screenshot of specific web element:

Earlier, users can take a screenshot of the entire page as there was no provision to take the screenshot of the specific web element. But with Selenium 4, users can take the screenshot of a specific web element.

Please find the below code:

WebElement logo=driver.Findelement (By.xpath(“//div[@id=’divLogo’]//img”));
File file=logo.getScreenshotAs(OutputType.FILE);
File destFile =new File(“logo.png”);
FileUtils.copyFile(file,destfile);
#2) Open the new tab on the browser:

Now, in Selenium 4, the user can open a URL in a new tab along with the existing tab.

For Example: If the user wants to open 2 URLs in two different tabs at the same time, the user can do that with the Selenium 4.

Please find the below code for reference:

driver.get(https://www.google.com/);
driver.switchTo().newWindow(WindowType.TAB);
driver.navigate().to(https://www.crmpro.com/);
#3) Open a new window on the browser:

Using Selenium 4, the users can also open the new window on the same browser.

For Example, if the user wants to access two applications in the same browser, the user can now do this.

Please find the below code for reference:

driver.get(https://www.google.com/);
driver.switchTo().newWindow(WindowType.WINDOW);
driver.navigate().to(https://www.crmpro.com/);
#4) Object Location:

Now with Selenium 4, users can achieve the coordinates, dimension, height, width, etc. as the location of the web elements or object.

Please find the below code for your reference:

WebElement logo1=driver.Findelement(By.xpath(“//div[@id=’divLogo’]//img”));
System.out.println(“Height:” +logo.getRect().getDimension().getHeight());
System.out.println(“Height:” +logo.getRect().getDimension().getWidth());
System.out.println(“X Location: “ +Logo.getRect().getX());
System.out.println(“Y Location: “ +Logo.getRect().getY());
#5) Relative Locators:

These are also known as Friendly Locators, and this functionality is being added to find out the element which is present nearby to other web element or, we can say that it can find the web elements based on GUI location.

There are five locators added in Selenium 4:

below(): Web element located below for the specified element.
toLeftOf() : Target web element which is present to the left of specified element.
toRightOf(): Target web element which is presented to the right of a specified element.
above(): Web element located above for the specified element.
near() : Target web element which is away(approx. 50 pixels) from the specified element.
Note: All the above relative locators method support “withTagName” method.

The below example is for the toLeftof() and below() locators:

WebElement book;
book = driver.Findelement(RelativeLocators.withTagName(“li”).toLeftOf(By.id(“pid1”))
.below(By.id(“pid2”)));
String id1=book.getAttribute (“id1”);
The below example is for the toRightOf() and above() locators:

WebElement book1;
book1 = driver.Findelement(RelativeLocators.withTagName(“li”).toRightOf(By.id(“pid1”))
.above(By.id(“pid2”)));
String id2=book1.getAttribute (“id2”);
#6) Chrome Dev tools:

In the new version of Selenium, they have made some internal changes in the API. Earlier in Selenium 3, the Chrome driver extends directly to the Remote Web Driver class. But now in Selenium 4, Chrome driver class extends to Chromium Driver. Chromium Driver class has some predefined methods to access the dev tool.

Note: Chromium Driver extends the Remote Web driver class.

By using the API, we can perform the following operations:

Enable Network Offline
Enable Network Online
Get Console Logs
Load Insure Web Site
Conclusion
In this tutorial, we have covered the introduction to the new version of Selenium 4, some upcoming features related to Selenium Grid, IDE, and Selenium WebDriver.

We have also seen a brief description of the Relative Locators, Chrome dev tools. We can expect a lot from the Selenium 4, be it the browser support, the documentation, or the UI.

Author: This article is written by Akanksha K who has 7+ years of experience in Software Quality and building Test Frameworks.